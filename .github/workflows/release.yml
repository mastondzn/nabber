name: Release

on:
    push:
        tags:
            - 'v*'
    workflow_dispatch:

jobs:
    release:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            id-token: write
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup pnpm
              uses: pnpm/action-setup@v3

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Get pnpm store directory
              id: pnpm-cache
              run: |
                  echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install

            - name: Run build
              run: pnpm build

              # We make sure ci is passing before releasing
            - name: Wait for CI to finish
              uses: lewagon/wait-on-check-action@v1.3.3
              if: github.event_name == 'push'
              with:
                  ref: ${{ github.ref }}
                  check-name: ci (20)
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
                  verbose: true
                  wait-interval: 8

            - name: Set publishing config
              run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Create release
              run: pnpm publish --no-git-checks

            - run: pnpx changelogithub
              if: always()
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
